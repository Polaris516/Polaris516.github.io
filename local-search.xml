<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Instruction of Algorithm</title>
    <link href="/Algorithm/"/>
    <url>/Algorithm/</url>
    
    <content type="html"><![CDATA[<p><img src="/img/AllAlgorithm.png" alt="《Instruction of Algorithm (Fourth Edition)》"></p><p><img src="/img/Algorithm2.png" alt="《算法导论》（第3版）"></p><div class="note note-warning">            <p>本文内容根据博主自身理解，同时结合《Instruction of Algorithm (4th Edition)》和《算法导论》（第三版）编写。</p><p>PS：借鉴了很多原书中的内容，因为写的太好了……</p>          </div><h2 id="Part-1-Foundations"><a href="#Part-1-Foundations" class="headerlink" title="Part 1 Foundations"></a>Part 1 Foundations</h2><h3 id="1-1-Algorithm"><a href="#1-1-Algorithm" class="headerlink" title="1.1 Algorithm"></a>1.1 Algorithm</h3><h4 id="Data-structures（数据结构）"><a href="#Data-structures（数据结构）" class="headerlink" title="Data structures（数据结构）"></a>Data structures（数据结构）</h4><p><span class="label label-info">This book also presents several data structures. A data structure is away to store and organize data in order to facilitate access and modifications. Using the appropriate data structure or structures is an important part of algorithm design. No single data structure works well for all purposes, and so you should know the strengths and limitations of several of them.</span></p><p><span class="label label-warning">这本书还介绍了几种数据结构。数据结构是一种存储和组织数据的方式，以方便访问和修改。使用适当的数据结构是算法设计的重要组成部分。没有一种单一的数据结构可以很好地满足所有目的，因此您应该知道其中一些数据结构的优点和局限性。</span></p><h4 id="Technique（技术）"><a href="#Technique（技术）" class="headerlink" title="Technique（技术）"></a>Technique（技术）</h4><h4 id="Hard-problems"><a href="#Hard-problems" class="headerlink" title="Hard problems"></a>Hard problems</h4><h4 id="Alternative-computing-models"><a href="#Alternative-computing-models" class="headerlink" title="Alternative computing models"></a>Alternative computing models</h4><p><a href="https://polaris516.github.io/SortAlgorithm/">手撕排序算法</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>-Algorithm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手撕排序算法</title>
    <link href="/SortAlgorithm/"/>
    <url>/SortAlgorithm/</url>
    
    <content type="html"><![CDATA[<h2 id="Insertion-Sort-插入排序"><a href="#Insertion-Sort-插入排序" class="headerlink" title="Insertion Sort(插入排序)"></a>Insertion Sort(插入排序)</h2><div class="note note-success">            <p>插入排序：</p>          </div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InsertSort</span><span class="hljs-params">(<span class="hljs-type">int</span>* arr)</span></span>&#123;<br>    <br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><div class="note note-primary">            <p>Running time:</p><p>​Depends on input(eg: already sorted)</p>          </div>]]></content>
    
    
    
    <tags>
      
      <tag>-Algorithm -Sort</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
